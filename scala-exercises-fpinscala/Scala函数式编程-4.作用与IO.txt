第四部分 作用与I/O
13 外部作用和I/O
13.1 分解作用
13.2 一个简单的IO类型
13.2.1 处理输入效果
13.2.2 简单IO类型的优缺点
13.3 避免栈溢出
13.3.1 将一个控制流转化为数据构造子
13.3.2 Trampolining：栈溢出的通用解决方法
13.4 一个更微妙的IO类型
13.4.1 合理的monad
13.4.2 一个支持控制台I/O的monad
13.4.3 纯解释器
13.5 非阻塞和异步I/O
13.6 一个通用的IO类型
13.6.1 最终的main程序
13.7 为什么IO类型不足以支撑流式I/O
13.8 小结
14 本地影响和可变状态
14.1 纯函数式的可变状态
14.2 一种限制副作用范围的数据类型
14.2.1 受限可变性的语言表达
14.2.2 一种可变引用的代数表达
14.2.3 执行修改状态的行为
14.2.4 可变数组
14.2.5 一个纯函数的in-place快排实现
14.3 纯粹是相对于上下文的
14.3.1 副作用是什么？
14.4 小结
15 流式处理与增量I/O
15.1 命令式I/O的问题示例
15.2 一个简单的流转换器
15.2.1 创建Process
15.2.2 组合和追加处理
15.2.3 处理文件
15.3 可扩展的处理类型
15.3.1 来源
15.3.2 保证资源安全
15.3.3 单一输入过程
15.3.4 多个输入流
15.3.5 去向
15.3.6 Effectful通道
15.3.7 动态资源分配
15.4 应用场景
15.5 小结