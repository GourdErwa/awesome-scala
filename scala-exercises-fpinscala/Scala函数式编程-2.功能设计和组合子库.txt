第二部分 功能设计和组合子库
7 纯函数式的并行计算
7.1 选择数据类型和函数
7.1.1 一种用于并行计算的数据类型
7.1.2 组合并行计算
7.1.3 显性分流
7.2 确定表现形式
7.3 完善API
7.4 API与代数
7.4.1 映射法则
7.4.2 分流法则
7.4.3 打破法则：一个微妙的bug
7.4.4 用Actor实现一个完全无阻塞的Par
7.5 完善组合子为更通用的形式
7.6 小结
8 基于性质的测试
8.1 基于性质测试概览
8.2 选择数据类型和函数
8.2.1 API的初始代码片段
8.2.2 性质的含义与API
8.2.3 生成器的意义和API
8.2.4 生成值决定生成器
8.2.5 精炼Prop的数据类型
8.3 最小化测试用例
8.4 使用库并改进其易用性
8.4.1 一些简单的例子
8.4.2 为并行计算编写测试套件
8.5 测试高阶函数及展望未来
8.6 生成器法则
8.7 小结
9 语法分析器组合子
9.1 代数设计，走起
9.2 一种可能的代数
9.2.1 切片和非空重复
9.3 处理上下文的相关性
9.4 写一个JSON分析器
9.4.1 JSON格式
9.4.2 JSON分析器
9.5 错误提示
9.5.1 一种可行的设计
9.5.2 错误嵌套
9.5.3 控制分支和回溯轨迹
9.6 实现代数
9.6.1 一种可能的实现
9.6.2 串化分析器
9.6.3 标记分析器
9.6.4 故障转移和回溯
9.6.5 上下文相关的分析
9.7 小结